name: Render On-Demand

on:
  workflow_dispatch:
  schedule:
    # 07:00 IST == 01:30 UTC daily
    - cron: "30 1 * * *"

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Ensure jq installed
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Create temporary Render service
        id: create
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          set -euo pipefail
          PAYLOAD=$(cat <<'JSON'
          {
            "ownerId": "${{ secrets.RENDER_OWNER_ID }}",
            "serviceDetails": {
              "name": "nrega-script",
              "type": "web",
              "env": "node",
              "plan": "free",
              "buildCommand": "npm install",
              "startCommand": "npm start"
            },
            "envVars": [
              { "key": "GOOGLE_CREDENTIALS_BASE64", "value": "${{ secrets.GOOGLE_CREDENTIALS_BASE64 }}" },
              { "key": "HTTP_PROXY", "value": "${{ secrets.HTTP_PROXY }}" },
              { "key": "HTTPS_PROXY", "value": "${{ secrets.HTTPS_PROXY }}" },
              { "key": "PROXY_USER", "value": "${{ secrets.PROXY_USER }}" },
              { "key": "PROXY_PASS", "value": "${{ secrets.PROXY_PASS }}" }
            ],
            "repo": {
              "url": "${{ github.server_url }}/${{ github.repository }}",
              "branch": "${{ github.ref_name }}"
            }
          }
          JSON
          )

          RESP=$(curl -fsS -X POST "https://api.render.com/v1/services" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD")

          echo "$RESP" | jq .
          echo "SERVICE_ID=$(echo "$RESP" | jq -r .id)" >> $GITHUB_ENV

      - name: Wait for run to complete (5 minutes)
        run: sleep 300

      - name: Cleanup (delete Render service)
        if: always()
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          if [ -n "${{ env.SERVICE_ID }}" ]; then
            curl -fsS -X DELETE "https://api.render.com/v1/services/${{ env.SERVICE_ID }}" \
              -H "Authorization: Bearer ${RENDER_API_KEY}"
            echo "Deleted service ${{ env.SERVICE_ID }}"
          else
            echo "No SERVICE_ID to delete."
          fi
